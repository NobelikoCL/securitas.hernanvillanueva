# Generated by Django 5.2.3 on 2025-06-25 21:11

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Cargo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100, unique=True)),
                ("descripcion", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="Cliente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "razon_social",
                    models.CharField(
                        max_length=200, unique=True, verbose_name="Razón Social"
                    ),
                ),
                (
                    "rut",
                    models.CharField(max_length=12, unique=True, verbose_name="RUT"),
                ),
                (
                    "gestor_nombre",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Nombre del Gestor"
                    ),
                ),
                (
                    "gestor_telefono",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Teléfono del Gestor"
                    ),
                ),
                (
                    "gestor_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Email del Gestor"
                    ),
                ),
                (
                    "direccion",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Dirección"
                    ),
                ),
                (
                    "email_contacto",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Email de Contacto"
                    ),
                ),
                (
                    "telefono_contacto",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Teléfono de Contacto"
                    ),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "fecha_actualizacion",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Actualización"
                    ),
                ),
            ],
            options={
                "verbose_name": "Cliente",
                "verbose_name_plural": "Clientes",
                "ordering": ["razon_social"],
            },
        ),
        migrations.CreateModel(
            name="TipoIncidencia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100, unique=True)),
                ("descripcion", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="TipoVehiculo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="CentroCosto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100)),
                ("descripcion", models.TextField(blank=True)),
                (
                    "cliente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="centros_costo",
                        to="erp.cliente",
                    ),
                ),
            ],
            options={
                "verbose_name": "Centro de Costo",
                "verbose_name_plural": "Centros de Costo",
            },
        ),
        migrations.CreateModel(
            name="Instalacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=150, verbose_name="Nombre de la Instalación"
                    ),
                ),
                ("direccion", models.TextField(verbose_name="Dirección Completa")),
                (
                    "contacto_nombre",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Nombre del Contacto"
                    ),
                ),
                (
                    "contacto_telefono",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Teléfono de Contacto"
                    ),
                ),
                (
                    "contacto_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Email de Contacto"
                    ),
                ),
                ("activa", models.BooleanField(default=True, verbose_name="Activa")),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "fecha_actualizacion",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Actualización"
                    ),
                ),
                (
                    "cliente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instalaciones",
                        to="erp.cliente",
                        verbose_name="Cliente",
                    ),
                ),
            ],
            options={
                "verbose_name": "Instalación",
                "verbose_name_plural": "Instalaciones",
                "ordering": ["cliente", "nombre"],
                "unique_together": {("cliente", "nombre")},
            },
        ),
        migrations.CreateModel(
            name="Personal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombres", models.CharField(max_length=100, verbose_name="Nombres")),
                (
                    "apellidos",
                    models.CharField(max_length=100, verbose_name="Apellidos"),
                ),
                (
                    "rut",
                    models.CharField(max_length=12, unique=True, verbose_name="RUT"),
                ),
                (
                    "fecha_nacimiento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de Nacimiento"
                    ),
                ),
                (
                    "estado_civil",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("S", "Soltero/a"),
                            ("C", "Casado/a"),
                            ("D", "Divorciado/a"),
                            ("V", "Viudo/a"),
                            ("U", "Unión Civil"),
                            ("O", "Otro"),
                        ],
                        max_length=1,
                        verbose_name="Estado Civil",
                    ),
                ),
                ("direccion", models.TextField(blank=True, verbose_name="Dirección")),
                ("telefono", models.CharField(max_length=15, verbose_name="Teléfono")),
                (
                    "telefono_emergencia",
                    models.CharField(
                        blank=True, max_length=15, verbose_name="Teléfono de Emergencia"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Correo Electrónico"
                    ),
                ),
                (
                    "fecha_ingreso",
                    models.DateField(
                        auto_now_add=True, verbose_name="Fecha de Ingreso"
                    ),
                ),
                (
                    "fecha_contratacion",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de Contratación"
                    ),
                ),
                ("activo", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "acepta_whatsapp",
                    models.BooleanField(
                        default=False, verbose_name="Acepta mensajería WhatsApp"
                    ),
                ),
                (
                    "licencia_conducir",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Licencia de Conducir"
                    ),
                ),
                (
                    "vencimiento_licencia",
                    models.DateField(
                        blank=True, null=True, verbose_name="Vencimiento Licencia"
                    ),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "fecha_actualizacion",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Actualización"
                    ),
                ),
                (
                    "cargo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="erp.cargo",
                        verbose_name="Cargo o Función",
                    ),
                ),
                (
                    "centro_costo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="personal",
                        to="erp.centrocosto",
                        verbose_name="Centro de Costo",
                    ),
                ),
                (
                    "cliente",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="personal",
                        to="erp.cliente",
                        verbose_name="Cliente",
                    ),
                ),
                (
                    "instalacion_asignada",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="personal_asignado",
                        to="erp.instalacion",
                        verbose_name="Instalación Asignada",
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        blank=True,
                        help_text="Usuario para acceso al sistema (si aplica)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Personal",
                "verbose_name_plural": "Personal",
                "ordering": ["apellidos", "nombres"],
            },
        ),
        migrations.CreateModel(
            name="RequerimientosCliente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sistema_turnos_4x4",
                    models.BooleanField(
                        default=True,
                        verbose_name="Usar sistema 4x4 (4 días trabajo / 4 días libres)",
                    ),
                ),
                (
                    "requiere_personal",
                    models.BooleanField(
                        default=True, verbose_name="¿Requiere personal?"
                    ),
                ),
                (
                    "requiere_vehiculos",
                    models.BooleanField(
                        default=False, verbose_name="¿Requiere vehículos?"
                    ),
                ),
                (
                    "cantidad_vehiculos",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Cantidad de vehículos requeridos",
                    ),
                ),
                (
                    "notas",
                    models.TextField(blank=True, verbose_name="Notas Adicionales"),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "fecha_actualizacion",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Actualización"
                    ),
                ),
                (
                    "instalacion",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requerimientos",
                        to="erp.instalacion",
                        verbose_name="Instalación",
                    ),
                ),
            ],
            options={
                "verbose_name": "Requerimientos del Cliente",
                "verbose_name_plural": "Requerimientos de Clientes",
            },
        ),
        migrations.CreateModel(
            name="ConfiguracionTurno",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_turno",
                    models.CharField(
                        choices=[
                            ("4x4", "Sistema 4x4 (4 días trabajo / 4 días libres)"),
                            ("5x2", "Sistema 5x2 (5 días trabajo / 2 días libres)"),
                            ("6x1", "Sistema 6x1 (6 días trabajo / 1 día libre)"),
                            ("4x3", "Sistema 4x3 (4 días trabajo / 3 días libres)"),
                            ("7x7", "Sistema 7x7 (7 días trabajo / 7 días libres)"),
                            ("otro", "Otro sistema personalizado"),
                        ],
                        default="4x4",
                        help_text="Seleccione el sistema de turnos que aplica para este contrato",
                        max_length=10,
                        verbose_name="Sistema de Turnos",
                    ),
                ),
                (
                    "turno_mañana_inicio",
                    models.TimeField(
                        default="08:00",
                        help_text="Hora de inicio del turno mañana (formato HH:MM)",
                        verbose_name="Inicio Turno Mañana",
                    ),
                ),
                (
                    "turno_mañana_fin",
                    models.TimeField(
                        default="20:00",
                        help_text="Hora de término del turno mañana (formato HH:MM)",
                        verbose_name="Fin Turno Mañana",
                    ),
                ),
                (
                    "turno_tarde_inicio",
                    models.TimeField(
                        default="20:00",
                        help_text="Hora de inicio del turno tarde (formato HH:MM)",
                        verbose_name="Inicio Turno Tarde",
                    ),
                ),
                (
                    "turno_tarde_fin",
                    models.TimeField(
                        default="08:00",
                        help_text="Hora de término del turno tarde (formato HH:MM)",
                        verbose_name="Fin Turno Tarde",
                    ),
                ),
                (
                    "dias_trabajo",
                    models.PositiveSmallIntegerField(
                        default=4,
                        help_text="Número de días consecutivos de trabajo",
                        verbose_name="Días de Trabajo",
                    ),
                ),
                (
                    "dias_descanso",
                    models.PositiveSmallIntegerField(
                        default=4,
                        help_text="Número de días de descanso después del ciclo de trabajo",
                        verbose_name="Días de Descanso",
                    ),
                ),
                (
                    "personal_requerido_por_turno",
                    models.PositiveSmallIntegerField(
                        default=1,
                        help_text="Número de personas necesarias por turno",
                        verbose_name="Personal Requerido por Turno",
                    ),
                ),
                (
                    "incluir_festivos",
                    models.BooleanField(
                        default=True,
                        help_text="Considerar días festivos en la programación de turnos",
                        verbose_name="Incluir días festivos",
                    ),
                ),
                (
                    "notas",
                    models.TextField(
                        blank=True,
                        help_text="Cualquier información adicional relevante para la configuración de turnos",
                        verbose_name="Notas Adicionales",
                    ),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "fecha_actualizacion",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Actualización"
                    ),
                ),
                (
                    "requerimientos",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="configuracion_turnos",
                        to="erp.requerimientoscliente",
                        verbose_name="Requerimientos del Cliente",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuración de Turnos",
                "verbose_name_plural": "Configuraciones de Turnos",
                "ordering": ["requerimientos__instalacion__cliente", "tipo_turno"],
            },
        ),
        migrations.CreateModel(
            name="Incidencia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("titulo", models.CharField(max_length=200)),
                ("fecha_hora_reporte", models.DateTimeField(auto_now_add=True)),
                ("fecha_hora_suceso", models.DateTimeField()),
                ("descripcion", models.TextField()),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("A", "Abierta"),
                            ("P", "En Progreso"),
                            ("C", "Cerrada"),
                        ],
                        default="A",
                        max_length=1,
                    ),
                ),
                (
                    "reportado_por",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "instalacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="erp.instalacion",
                    ),
                ),
                (
                    "personal_involucrado",
                    models.ManyToManyField(blank=True, to="erp.personal"),
                ),
                (
                    "tipo_incidencia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="erp.tipoincidencia",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Vehiculo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "patente",
                    models.CharField(
                        max_length=10, unique=True, verbose_name="Patente"
                    ),
                ),
                (
                    "numero_motor",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="N° Motor"
                    ),
                ),
                (
                    "numero_chasis",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="N° Chasis"
                    ),
                ),
                ("marca", models.CharField(max_length=50, verbose_name="Marca")),
                ("modelo", models.CharField(max_length=50, verbose_name="Modelo")),
                ("ano", models.PositiveIntegerField(verbose_name="Año")),
                (
                    "color",
                    models.CharField(blank=True, max_length=50, verbose_name="Color"),
                ),
                (
                    "tipo_combustible",
                    models.CharField(
                        choices=[
                            ("G", "Gasolina"),
                            ("D", "Diésel"),
                            ("E", "Eléctrico"),
                            ("H", "Híbrido"),
                            ("GNC", "Gas Natural Comprimido"),
                            ("GLP", "Gas Licuado de Petróleo"),
                        ],
                        default="G",
                        max_length=3,
                        verbose_name="Tipo de Combustible",
                    ),
                ),
                (
                    "capacidad_tanque",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Capacidad del Tanque (Lts)"
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("D", "Disponible"),
                            ("M", "En Mantenimiento"),
                            ("R", "En Reparación"),
                            ("B", "Dado de Baja"),
                        ],
                        default="D",
                        max_length=1,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "en_servicio",
                    models.BooleanField(default=True, verbose_name="En Servicio"),
                ),
                (
                    "kilometraje",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Kilometraje Actual"
                    ),
                ),
                (
                    "kilometraje_mantenimiento",
                    models.PositiveIntegerField(
                        default=10000,
                        help_text="Kilometraje para próximo mantenimiento programado",
                        verbose_name="Próximo Mantenimiento (km)",
                    ),
                ),
                (
                    "poliza_seguro",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Póliza de Seguro"
                    ),
                ),
                (
                    "vencimiento_seguro",
                    models.DateField(
                        blank=True, null=True, verbose_name="Vencimiento del Seguro"
                    ),
                ),
                (
                    "revision_tecnica",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Vencimiento Revisión Técnica",
                    ),
                ),
                (
                    "permiso_circulacion",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Vencimiento Permiso de Circulación",
                    ),
                ),
                (
                    "observaciones",
                    models.TextField(blank=True, verbose_name="Observaciones"),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "fecha_actualizacion",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Actualización"
                    ),
                ),
                (
                    "instalacion_asignada",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="vehiculos_asignados",
                        to="erp.instalacion",
                        verbose_name="Instalación Asignada",
                    ),
                ),
                (
                    "requerimientos_cliente",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="vehiculos",
                        to="erp.requerimientoscliente",
                        verbose_name="Requerimientos del Cliente",
                    ),
                ),
                (
                    "tipo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="erp.tipovehiculo",
                        verbose_name="Tipo de Vehículo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuración de Turno",
                "verbose_name_plural": "Configuraciones de Turnos",
            },
        ),
        migrations.CreateModel(
            name="Turno",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Fecha del Turno",
                    ),
                ),
                ("fecha_inicio", models.DateTimeField(verbose_name="Inicio del Turno")),
                ("fecha_fin", models.DateTimeField(verbose_name="Fin del Turno")),
                (
                    "tipo_turno",
                    models.CharField(
                        choices=[
                            ("M", "Mañana"),
                            ("T", "Tarde"),
                            ("N", "Noche"),
                            ("C", "Completo"),
                        ],
                        help_text="Tipo de turno asignado",
                        max_length=1,
                        verbose_name="Tipo de Turno",
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("P", "Pendiente"),
                            ("E", "En Curso"),
                            ("C", "Completado"),
                            ("A", "Ausente"),
                            ("J", "Justificado"),
                            ("X", "Cancelado"),
                        ],
                        default="P",
                        help_text="Estado actual del turno",
                        max_length=1,
                        verbose_name="Estado del Turno",
                    ),
                ),
                (
                    "horas_planificadas",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Horas planificadas para este turno",
                        max_digits=5,
                        null=True,
                        verbose_name="Horas Planificadas",
                    ),
                ),
                (
                    "horas_reales",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Horas reales trabajadas (se calculan automáticamente)",
                        max_digits=5,
                        null=True,
                        verbose_name="Horas Reales",
                    ),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "fecha_actualizacion",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Actualización"
                    ),
                ),
                (
                    "notas",
                    models.TextField(blank=True, verbose_name="Notas Adicionales"),
                ),
                (
                    "configuracion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="turnos_asignados",
                        to="erp.configuracionturno",
                        verbose_name="Configuración de Turno",
                    ),
                ),
                (
                    "creado_por",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="turnos_creados",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creado Por",
                    ),
                ),
                (
                    "instalacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="turnos",
                        to="erp.instalacion",
                        verbose_name="Instalación",
                    ),
                ),
                (
                    "personal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="turnos",
                        to="erp.personal",
                        verbose_name="Personal Asignado",
                    ),
                ),
            ],
            options={
                "verbose_name": "Turno",
                "verbose_name_plural": "Turnos",
                "ordering": ["-fecha", "fecha_inicio", "personal"],
                "indexes": [
                    models.Index(fields=["fecha"], name="erp_turno_fecha_a4f49c_idx"),
                    models.Index(
                        fields=["personal"], name="erp_turno_persona_150bb4_idx"
                    ),
                    models.Index(
                        fields=["instalacion"], name="erp_turno_instala_e4820e_idx"
                    ),
                    models.Index(fields=["estado"], name="erp_turno_estado_98242f_idx"),
                ],
            },
        ),
    ]
